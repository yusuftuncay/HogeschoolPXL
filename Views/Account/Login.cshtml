@model HogeschoolPXL.Models.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1 class="titleView">Login</h1>

<div class="row d-flex justify-content-center">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" type="email"/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" type="password" id="password"/>
                <i class="bi bi-eye-slash" id="togglePassword"></i>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="form-group d-flex justify-content-between">
                <a class="btn btn-sm backArrow" asp-action="Register" asp-controller="Account">Registreer</a>
                <input type="submit" value="Inloggen" class="btn btn-outline-success btn-sm viewButton" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    const togglePassword = document.querySelector("#togglePassword");
    const password = document.querySelector("#password");

    togglePassword.addEventListener("click", function () {
        // Toggle the Type Attribute
        const type = password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);

        // Toggle the Icon
        this.classList.toggle("bi-eye");
    });

    // Prevent Form Submit
    const form = document.querySelector("form");
    form.addEventListener('submit', function (e) {
        e.preventDefault();
    });
</script>