@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*@model HogeschoolPXL.Models.ViewModels.LoginViewModel*@

<div class="dropdown dropdown-login" onload="disableToast_LoginPage()">
    <span id="loginImg">
        <a asp-controller="Account" asp-action="Login">
            <img src="~/img/profile.png" height="38"/>
        </a>
    </span>
    @if (SignInManager.IsSignedIn(User))
    {
		<div class="dropdown-content" id="dropdown-login-form">
            <span class="dropdown-item">@User.Identity?.Name</span>
            <hr>
            <a class="dropdown-item" asp-controller="Account" asp-action="Logout">Logout</a>
        </div>
    }
    else
    {
        <div class="dropdown-content" id="dropdown-login-form">
            <form class="dropdown-item" asp-controller="Account" asp-action="Login" method="post">
                @*<div asp-validation-summary="All" class="text-danger"></div>*@
                <div class="form-group">
                    <label name="Email" class="control-label">Email</label>
                    <input name="Email" class="form-control" type="email" placeholder="email@example.com"/>
                    @*<span asp-validation-for="Email" class="text-danger"></span>*@
                </div>
                <div class="form-group">
                    <label name="Password" class="control-label">Password</label>
                    <input name="Password" class="form-control" type="password" placeholder="Wachtwoord"/>
                    @*<span asp-validation-for="Password" class="text-danger"></span>*@
                </div>
                <div class="form-group d-flex justify-content-between">
                    <a class="btn btn-sm backArrow" asp-controller="Account" asp-action="Register">Registreren</a>
                    <input type="submit" value="Inloggen" class="btn btn-outline-success btn-sm viewButton"/>
                </div>
            </form>
        </div>
    }
</div>