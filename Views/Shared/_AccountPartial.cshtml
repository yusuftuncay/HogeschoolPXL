@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="dropdown dropdown-login" onload="disableToast_LoginPage()">
    <span id="loginImg">
        @if (SignInManager.IsSignedIn(User))
        {
            <span>
                <img src="~/img/profile.png" height="38" />
            </span>
        }
        else
        {
            <a asp-controller="Account" asp-action="Login">
                <img src="~/img/profile.png" height="38" />
            </a>
        }
    </span>
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="dropdown-content" id="dropdown-logged-in">
            @if (User.IsInRole("Admin")) { <h6 class="dropdown-item"><i><u>Admin</u></i></h6> }
            @if (User.IsInRole("Lector")) { <h6 class="dropdown-item"><i><u>Lector</u></i></h6> }
            @if (User.IsInRole("Student")) { <h6 class="dropdown-item"><i><u>Student</u></i></h6> }
            <span class="dropdown-item">@User.Identity?.Name</span>
            <hr>
            @* Show Identity Tab if Admin is Logged in *@
            @if (User.IsInRole("Admin"))
            {
                <a class="dropdown-item" class="dropdown-item" asp-controller="Account" asp-action="Identity">Identity</a>
            }
            @* User is authenticated/loggedin but has NO role, because it probably got DECLINED by an admin, this way they can request again *@
            @if (!User.IsInRole("Admin") && !User.IsInRole("Lector") && !User.IsInRole("Student"))
            {
                <a class="dropdown-item" class="dropdown-item" asp-controller="Account" asp-action="RoleRequestRepeatGet">Stuur rolverzoek</a>
            }
            <a class="dropdown-item" asp-controller="Account" asp-action="Logout">Uitloggen</a>
        </div>
    }
    else
    {
        <div class="dropdown-content" id="dropdown-logged-out">
            <form class="d-block px-3 pt-2" asp-controller="Account" asp-action="Login" method="post">
                <div class="form-group">
                    <label name="Email" class="control-label">Email</label>
                    <input name="Email" class="form-control" type="email" placeholder="email@example.com"/>
                </div>
                <div class="form-group">
                    <label name="Password" class="control-label">Wachtwoord</label>
                    <input name="Password" class="form-control" type="password" placeholder="Wachtwoord"/>
                </div>
                <div class="form-group d-flex justify-content-between btn-group">
                    <a class="btn-sm backArrow" asp-controller="Account" asp-action="Register">Registreren</a>
                    <input type="submit" value="Inloggen" class="btn btn-outline-success btn-sm viewButton"/>
                </div>
            </form>
        </div>
    }
</div>